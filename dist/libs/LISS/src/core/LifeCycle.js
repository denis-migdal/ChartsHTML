import LISS from "../extends";
import { States } from "../LifeCycle/states.ts";
LISS.States = States;
import { define, getName, isDefined, whenDefined, getHostCstr, getHostCstrSync } from "../LifeCycle/DEFINED";
LISS.define = define;
LISS.getName = getName;
LISS.isDefined = isDefined;
LISS.whenDefined = whenDefined;
LISS.getHostCstr = getHostCstr;
LISS.getHostCstrSync = getHostCstrSync;
//LISS.whenAllDefined = whenAllDefined;
import { isReady, whenReady, getControlerCstr, getControlerCstrSync } from "../LifeCycle/READY";
LISS.isReady = isReady;
LISS.whenReady = whenReady;
LISS.getControlerCstr = getControlerCstr;
LISS.getControlerCstrSync = getControlerCstrSync;
import { isUpgraded, whenUpgraded, upgrade, upgradeSync, getHost, getHostSync } from "../LifeCycle/UPGRADED";
LISS.isUpgraded = isUpgraded;
LISS.whenUpgraded = whenUpgraded;
LISS.upgrade = upgrade;
LISS.upgradeSync = upgradeSync;
LISS.getHost = getHost;
LISS.getHostSync = getHostSync;
import { isInitialized, whenInitialized, initialize, initializeSync, getControler, getControlerSync } from "../LifeCycle/INITIALIZED";
LISS.isInitialized = isInitialized;
LISS.whenInitialized = whenInitialized;
LISS.initialize = initialize;
LISS.initializeSync = initializeSync;
LISS.getControler = getControler;
LISS.getControlerSync = getControlerSync;
//# sourceMappingURL=LifeCycle.js.map