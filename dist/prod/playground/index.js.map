{"version":3,"file":"playground/index.js","mappings":"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","sources":["webpack://ChartsHTML/./src/pages/playground/index.html","webpack://ChartsHTML/./libs/LISS/V3/components/code/code-block/index.css","webpack://ChartsHTML/./src/chart-playground/index.ts","webpack://ChartsHTML/./libs/LISS/V3/components/playground/playground-area/index.ts","webpack://ChartsHTML/./libs/LISS/V3/components/code/code-block/index.ts","webpack://ChartsHTML/./libs/LISS/V3/components/code/code-block/index.html","webpack://ChartsHTML/./libs/LISS/V3/components/playground/playground-area/index.css","webpack://ChartsHTML/./src/pages/playground/index.ts"],"sourcesContent":["export default __webpack_public_path__ + \"playground/index.html\";","export default \":host {\\n    display: block;\\n\\n    & > div {\\n\\n        width: 100%;\\n        height: 100%;\\n        font-family: monospace;\\n\\n        box-sizing: border-box;\\n        padding: 12px;\\n\\n        /*border: 1px solid rgb(204, 204, 204);*/\\n        border-radius: 3px;\\n        background-color: light-dark(rgb(204, 204, 204), rgb(51, 51, 51) );\\n\\n        white-space: pre;\\n        overflow-wrap: break-word;\\n\\n        /* ensures last line height even if empty */\\n        &::after {\\n            content: \\\"\\\\200b\\\"\\n        }\\n    }\\n}\";","import LISS from \"@LISS/src\";\nimport PlaygroundArea, { Resource } from \"@LISS/components/playground/playground-area/\";\n\nclass VSHSPlayground extends PlaygroundArea {\n\n    static override observedAttributes = [...PlaygroundArea.observedAttributes, \"server\"];\n\n    override generateIFrameContent() {\n\n        let c_js   = \"\";\n        let c_html = \"\";\n\n        if( this.codeLang === \"js\" )\n            c_js = this.codes[\"index.js\"].getCode();\n        else\n            c_html = this.codes[\"index.html\"].getCode();\n\n    const html =\n`<!DOCTYPE html>\n    <head>\n        <style>\n            body {\n                width : 100dvw;\n                height: 100dvh;\n                margin: 0;\n                background-color: white;\n            }\n            :not(:defined) {\n                visibility: hidden;\n            }\n        </style>\n        <script type=\"importmap\">\n            {\n                \"imports\": {\n                    \"@ChartsHTML\": \"/libs/ChartsHTML/index.js\"\n                }\n            }\n        </script>\n        <script type=\"module\" src=\"/libs/ChartsHTML/index.js\"></script>\n        <script type=\"module\">\n            ${c_js}\n        </script>\n    </head>\n    <body>\n${c_html}\n    </body>\n</html>\n`;\n        return html;\n\n    }\n\n    protected static override ASSETS_DIR = \"/assets/examples/\";\n\n    protected static override RESSOURCES = [\n        { file : 'index.js'  , title: 'JS API'  },\n        { file : 'index.html', title: 'HTML API'},\n    ]\n}\n\nLISS.define('chart-playground', VSHSPlayground);","import LISS from \"@LISS/src\";\nimport CodeBlock from \"../../code/code-block/\";\nimport html from \"@LISS/src/utils/parsers/html\";\nimport getPropertyInitialValue from \"@LISS/src/utils/DOM/getPropertyInitialValue\";\n\nimport LISSUpdate from \"@LISS/src/LISSClasses/LISSUpdate\";\n\nexport type Resource = {\n    title: string,\n    file : string,\n}\n\n// @ts-ignore\nimport css  from \"!!raw-loader!./index.css\";\n\nexport default class PlaygroundArea extends LISS({css}, LISSUpdate) {\n\n    protected resources: Record<string, HTMLElement> = {};\n    protected codes    : Record<string, CodeBlock>   = {};\n\n    constructor() {\n        super();\n\n        const card2 =\nhtml`<div class=\"card\"><div class=\"header\"><strong>Result</strong></div></div>`;\n\n        this.#iframe = document.createElement('iframe');\n        card2.append(this.#iframe);\n\n        this.resources['output'] = card2;\n\n        for(let res of this.klass.RESSOURCES) {\n\n            let codeLang = res.file.slice(res.file.indexOf('.') + 1);\n            if( codeLang === \"bry\")\n                codeLang = \"py\";\n\n            const code = this.codes[res.file] = new CodeBlock({codeLang})\n\n            const card =\nhtml`<div class=\"card\"><div class=\"header\"><strong>${res.title}</strong></div></div>`;\n\n            card.append( code );\n\n            this.resources[res.file] =  card;\n\n        }\n\n        const lang    = document.body.getAttribute(\"code-lang\");\n        this.#codeLang = lang ?? \"js\";\n\n        this.#blocks = getPropertyInitialValue(this, \"blocks\")\n                        ?? this.getAttribute('show')?.split(\",\")\n                        ?? null;\n\n        document.body.addEventListener('code-lang_changed', () => {\n            const lang = document.body.getAttribute(\"code-lang\");\n            this.codeLang = lang ?? \"js\";\n        });\n\n        // triggers\n        this.name = getPropertyInitialValue(this, \"name\")\n                 ?? this.getAttribute('name');\n\n        // TODO: first content load...\n        for( let code in this.codes )\n            this.codes[code].addEventListener('change', () => this.requestUpdate() );\n    }\n\n    override requestUpdate(): void {\n        super.requestUpdate();\n    }\n\n    #codeLang: string = \"js\";\n    get codeLang() {\n        return this.#codeLang;\n    }\n\n    set codeLang(codeLang: string) {\n\n        if( codeLang === this.#codeLang)\n            return;\n\n        this.#codeLang = codeLang;\n\n        this.updateLayout();\n        this.requestUpdate();\n    }\n\n    #iframe: HTMLIFrameElement;\n\n    generateIFrameContent(): string {\n        return \"\";\n    }\n\n    generateIFrameContext(): any {\n        return {};\n    }\n\n    override attributeChangedCallback(name: string, _:string|null, value: string|null) {\n        \n        if(name === \"show\") {\n\n            this.blocks = value?.split(',') ?? null;\n            return;\n        }\n\n        if(name === \"name\") {\n            this.name = value;\n            return;\n        }\n    }\n\n    static override observedAttributes = [\"show\", \"name\"];\n\n    protected static ASSETS_DIR = `/${LISS.VERSION}/assets/`;\n    protected static RESSOURCES = new Array<Resource>();\n    \n    #name: string|null = null;\n    protected files: Record<string, string> = {};\n\n    protected override onUpdate(): void {\n\n        // required to properly reset the frame...\n        // lose its state when moving in the DOM\n        this.#iframe.replaceWith(this.#iframe);\n        // this.#iframe.src = \"about:config\"\n\n        const content = this.generateIFrameContent();\n\n        const doc = this.#iframe.contentDocument;\n\n        if(doc !== null) { // is null if not added to the DOM...\n\n            /*doc.open();\n            doc.write( content );\n            doc.close();*/\n\n            (this.#iframe.contentWindow as any).LISSContext = this.generateIFrameContext();\n            \n            this.#iframe.srcdoc = content;\n        }\n    }\n\n    #blocks: string[]|null = null;\n\n    set blocks(names: string[]|null) {\n        this.#blocks = names;\n        this.updateLayout();\n    }\n\n    get blocks() {\n        return this.#blocks;\n    }\n\n    protected get klass() {\n        return this.constructor as typeof PlaygroundArea;\n    }\n\n    get name() {\n        return this.#name;\n    }\n\n    set name(name: string|null) {\n        \n        if( name === this.#name)\n            return;\n\n        this.#name = name;\n\n        this.onNameChange();\n    }\n\n    async onNameChange() {\n\n        if( this.#name !== null)\n            this.files = await this.klass.loadComponentFiles(this.#name);\n        else\n            for(let res of this.klass.RESSOURCES)\n                this.files[res.file] = \"\";\n\n        this.updateLayout();\n\n        this.fillBlocks();\n    }\n\n    protected fillBlocks() {\n\n        for(let name in this.codes)\n            this.codes[name].setCode( this.files[name] );\n    }\n\n    protected updateLayout() {\n\n        const blocks = this.getBlocks();\n        this.updateGridLayout(blocks);\n\n        const output     = this.resources[\"output\"];\n        const output_idx = blocks.indexOf(\"output\");\n\n        if( output_idx === -1 || ! output.isConnected )\n            return this.content.replaceChildren(...blocks.map( e => this.resources[e]));\n\n        // do NOT move iframe, else state will be rested too soon.\n        for(let child of [...this.content.children])\n            if( child !== output )\n                child.remove();\n        \n        for(let i = 0; i < output_idx; ++i)\n            output.before(this.resources[blocks[i]]);\n\n        for(let i = output_idx + 1 ; i < blocks.length; ++i)\n            this.content.append( this.resources[blocks[i]] );\n    }\n\n    updateGridLayout(blocks: readonly string[]) {\n\n        if( blocks.length == 1 )\n            this.host.style.setProperty('grid', '1fr / 1fr');\n        if( blocks.length >= 2  && blocks.length <= 4)\n            this.host.style.setProperty('grid', 'auto / 1fr 1fr');\n        if( blocks.length > 4 )\n            this.host.style.setProperty('grid', 'auto / 1fr 1fr 1fr');\n    }\n\n    protected getBlocks() {\n\n        const lang  = this.codeLang;\n        const langs = this.klass.CodeLangs;\n\n        let blocks = this.blocks;\n\n        if( blocks === null ) {\n            blocks = Object.keys(this.files).filter( e => {\n                const ext = e.slice(e.indexOf(\".\")+1);\n\n                return this.files[e] !== \"\" && (ext === lang || ! langs.includes(ext));\n                \n            });\n\n            blocks.push('output')\n        } else\n            blocks = blocks.map( e => e.endsWith('.code') ? e.slice(0, -4) + lang : e);\n        \n        return blocks;\n    }\n\n    private static loadedComponentsFiles: Record<string, Record<string,string> > = {};\n\n    private static get CodeLangs() {\n        return document.body.getAttribute(\"code-langs\")?.split(\",\") ?? [];\n    }\n\n    private static async loadComponentFiles(name: string) {\n\n        let compos = this.loadedComponentsFiles[name];\n        if( compos !== undefined)\n            return compos;\n\n        const compo_dir = this.ASSETS_DIR + name;\n\n        let files: Record<string, string> = {};\n\n        await Promise.all(this.RESSOURCES.map( async (ressource) => {\n\n            const resp = await fetch(`${compo_dir}/${ressource.file}`, {\n                headers: {\n                    \"liss-auto\": \"true\", // TODO: remove...\n                    \"hide-404\" : \"true\"\n                }\n            });\n\n            let text = \"\";\n            if( resp.ok )\n                text = await resp.text();\n\n            files[ressource.file] = text;\n\n        }));\n\n        return this.loadedComponentsFiles[name] = files;\n    }\n}\n\nLISS.define('playground-area', PlaygroundArea);","import LISS from \"@LISS/src\";\nimport {getCursorEndPos, getCursorPos, hl, setCursorPos} from \"../hl\";\n\n// @ts-ignore\nimport html from \"!!raw-loader!./index.html\";\n// @ts-ignore\nimport css  from \"!!raw-loader!./index.css\";\n// @ts-ignore\nimport theme from \"!!raw-loader!../Tomorrow.css\";\n\n\n\ntype HistoryState = {\n    code  : string;\n    cursor: number|null;\n}\n\n//TODO: Signal<T>\nexport default class CodeBlock extends LISS({\n    html,\n    css: [css, theme]\n})<string> {\n\n    readonly #output = this.content.firstElementChild! as HTMLElement;\n\n    #history_offset = 0;\n    readonly #history = new Array<HistoryState>();\n\n    constructor({codeLang}: {codeLang?: string} = {}) {\n        super();\n\n        if(codeLang !== undefined)\n            this.host.setAttribute(\"code-lang\", codeLang);\n\n        this.#initOutput();\n\n        this.update();\n    }\n\n    getCode() {\n        return this.content.textContent!;\n    }\n\n    setCode(code: string) {\n        this.#history.length = 0;\n        this.#history_offset = 0;\n\n        this.#history.push({\n            code,\n            cursor: null\n        })\n\n        this.host.textContent = code;\n        this.update();\n    }\n\n    #initOutput() {\n\n        this.#history.push({\n            code  : this.host.textContent!,\n            cursor: getCursorPos(this.#output)\n        })\n\n        this.#output.addEventListener('paste', ev => {\n            ev.stopImmediatePropagation();\n            ev.preventDefault();\n\n            const copied = ev.clipboardData!.getData('Text');\n\n            const beg = getCursorPos(this.#output)!;\n            const end = getCursorEndPos(this.#output)!;\n\n            let code = this.#output.textContent!;\n\n            this.#output.textContent = code.slice(0, beg) + copied + code.slice(end);\n            \n            this.#output.dispatchEvent(new Event('input') );\n\n            setCursorPos(this.#output, beg + copied.length);\n        });\n\n        this.#output.addEventListener(\"input\", () => {\n\n            const code = this.#output.textContent!;\n            this.host.textContent = code;\n\n            // reset history offset\n            this.#history.length -= this.#history_offset; \n            this.#history_offset = 0;\n\n            const cursor = getCursorPos(this.#output);\n\n            this.update();\n\n            setCursorPos(this.#output, cursor);\n\n            this.#history.push({\n                code,\n                cursor\n            });\n        });\n    \n        // Tabulation key\n        // @ts-ignore\n        this.#output.addEventListener(\"keydown\", (ev: KeyboardEvent) => {\n\n            if(this.isRO)\n                return;\n\n            if(ev.ctrlKey === true ) {\n\n                const key = ev.key.toLowerCase();\n\n                if( key === \"z\") {\n\n                    ev.preventDefault();\n\n                    if( ! ev.shiftKey ) {\n\n                        if( this.#history_offset === this.#history.length - 1 )\n                            return;\n\n                        ++this.#history_offset;\n                    } else {\n                        \n                        if( this.#history_offset === 0 )\n                            return;\n\n                        --this.#history_offset;\n                    }\n                    let {code, cursor} = this.#history[this.#history.length-1-this.#history_offset];\n                    \n                    this.host.textContent = code;\n                    this.update();\n\n                    if( cursor === null)\n                        cursor = code.length;\n                    setCursorPos(this.#output, cursor);\n                }\n\n                return;\n            }\n\n            let char = null;\n            if( ev.code === \"Tab\")\n                char = \"\\t\";\n            if( ev.code === \"Enter\")\n                char = \"\\n\";\n\n            if( char !== null) {\n                ev.preventDefault();\n    \n                // https://stackoverflow.com/questions/2237497/make-the-tab-key-insert-a-tab-character-in-a-contenteditable-div-and-not-blur\n                var doc = this.#output.ownerDocument.defaultView!;\n                var sel = doc.getSelection()!;\n                var range = sel.getRangeAt(0);\n    \n                var tabNode = document.createTextNode(char);\n                range.insertNode(tabNode);\n    \n                range.setStartAfter(tabNode);\n                range.setEndAfter(tabNode); \n                sel.removeAllRanges();\n                sel.addRange(range);\n\n                this.#output.dispatchEvent(new Event(\"input\"));\n            }\n        });\n    }\n\n    get codeLang() {\n        return this.host.getAttribute('code-lang') ?? \"plaintext\";\n    }\n\n    get isRO() {\n        return this.host.hasAttribute('ro');\n    }\n    set isRO(ro: boolean) {\n        this.host.toggleAttribute('ro', ro);\n    }\n\n    reset() {\n        \n        if( this.#history.length === 1)\n            return;\n\n        this.#history.length = 1;\n        this.#history_offset = 0;\n\n        // duplicated code...\n        let {code, cursor} = this.#history[this.#history.length-1-this.#history_offset];\n        \n        this.host.textContent = code;\n        this.update();\n\n        if( cursor === null)\n            cursor = code.length;\n        setCursorPos(this.#output, cursor);\n    }\n\n    update(trigger_event = true) {\n\n        this.#output.toggleAttribute(\"contenteditable\", ! this.isRO );\n\n        this.#output.innerHTML = hl(this.host.textContent!, this.codeLang);\n        if( trigger_event )\n            this.host.dispatchEvent(new Event('change'));\n    }\n\n    // TODO listen content.\n    static override observedAttributes = [\"code-lang\", \"ro\"];\n\n    override attributeChangedCallback() {\n        this.update(); //TODO: request update.\n    }\n}\n\nLISS.define('code-block', CodeBlock);","export default \"<div spellcheck=\\\"false\\\" contenteditable></div>\";","export default \":host {\\n    display: grid;\\n    grid : 1fr 1fr 1fr / 1fr 1fr 1fr;\\n    gap: 5px;\\n\\n    justify-items: center;\\n\\n    width: 100%;\\n\\n    & .card {\\n        width: 100%;\\n        display: flex;\\n        flex-flow: column nowrap; \\n    }\\n\\n    & .card > .header {\\n        text-align: center;\\n    }\\n    & .card > code-block {\\n        width: 100%;\\n        height: 100%;\\n    }\\n    & .card > iframe {\\n        border: 1px solid black;\\n        border-radius: 5px;\\n        width: 100%;\\n        height: fit-content;\\n        box-sizing: border-box;\\n    }\\n}\";","import \"@LISS/pages/skeleton/base/\";\n\nconst examples = [\n    \"curve-line\",\n    \"curve-points\",\n    \"curve-hline\",\n    \"curve-vline\",\n    \"curve-timelapse\",\n    \"curve-bars\",\n    \"curve-histogram\",\n\n    \"graph-empty\",\n\n    \"component-scale\",\n    \"component-zoom\",\n    \"component-tooltip\",\n    \"component-datalabels\",\n    \"component-value\",\n/*\n    \"html-empty\",\n    \"js-empty\",\n\n    \"jsapi-value\",\n    \"jsapi-value-cstr\"\n    */\n];\n\n\nimport \"@ChartsHTML/chart-playground/\";\n\n// liss-playground\nconst playground = document.querySelector<HTMLElement>('chart-playground')!;\nfunction setExample(name: string) {\n    selector.value = name;\n    //playground.removeAttribute('show');\n    playground.setAttribute('name', name);\n}\n\n// init select\n\nconst selector = document.querySelector<HTMLSelectElement>('select')!;\n//const webcomp_name = document.querySelector<HTMLInputElement>('input')!;\n\nfor(let example of examples)\n    selector.append( new Option(example, example));\n\nselector.addEventListener('change', () => {\n    const url = new URL(location as any);\n    url.searchParams.set(\"example\", selector.value);\n    history.pushState({}, \"\", url);\n\n    setExample(selector.value);\n});\n\n// init current example\n\nconst searchParams = new URLSearchParams(location.search);\nconst example = searchParams.get('example');\nsetExample(example ?? selector.value);"],"names":["VSHSPlayground","PlaygroundArea","static","observedAttributes","generateIFrameContent","c_js","c_html","this","codeLang","codes","getCode","file","title","LISS","define","css","LISSUpdate","resources","constructor","super","card2","html","document","createElement","append","res","klass","RESSOURCES","slice","indexOf","code","CodeBlock","card","lang","body","getAttribute","getPropertyInitialValue","split","addEventListener","name","requestUpdate","updateLayout","generateIFrameContext","attributeChangedCallback","_","value","blocks","VERSION","Array","files","onUpdate","replaceWith","content","contentDocument","contentWindow","LISSContext","srcdoc","names","onNameChange","loadComponentFiles","fillBlocks","setCode","getBlocks","updateGridLayout","output","output_idx","isConnected","replaceChildren","map","e","child","children","remove","i","before","length","host","style","setProperty","langs","CodeLangs","Object","keys","filter","ext","includes","push","endsWith","compos","loadedComponentsFiles","undefined","compo_dir","ASSETS_DIR","Promise","all","async","ressource","resp","fetch","headers","text","ok","theme","firstElementChild","setAttribute","update","textContent","cursor","getCursorPos","ev","stopImmediatePropagation","preventDefault","copied","clipboardData","getData","beg","end","getCursorEndPos","dispatchEvent","Event","setCursorPos","isRO","ctrlKey","key","toLowerCase","shiftKey","char","sel","ownerDocument","defaultView","getSelection","range","getRangeAt","tabNode","createTextNode","insertNode","setStartAfter","setEndAfter","removeAllRanges","addRange","hasAttribute","ro","toggleAttribute","reset","trigger_event","innerHTML","hl","examples","playground","querySelector","setExample","selector","example","Option","url","URL","location","searchParams","set","history","pushState","URLSearchParams","search","get"],"sourceRoot":""}